# ########### #
# BOILERPLATE #
# ########### #

[project]
name = "obelisk"
authors = [
    "Albert Li <alberthli@caltech.edu>",
    "Zach Olkin <zolkin@caltech.edu>",
    "Gavin Hua <ghua@caltech.edu>",
]
description = "The AMBER Lab's generic robot control interface."
channels = ["conda-forge"]
platforms = ["linux-64"]

[activation]
scripts = ["obelisk_ws/install/setup.sh"]
env = { RMW_IMPLEMENTATION="rmw_cyclonedds_cpp", PYRIGHT_PYTHON_FORCE_VERSION="latest", RCUTILS_COLORIZED_OUTPUT="1" }

# ############ #
# FEATURE SETS #
# ############ #

# minimal
[dependencies]
python = ">=3.10"
pip = ">=24.0"
setuptools = "<=70.4"
compilers = "*"

[pypi-dependencies]
matplotlib = ">=3.9.0"
numpy = ">=1.26"
obelisk_py = { path="./obelisk/python", editable=true }


# cuda
[feature.cuda121]
system-requirements = {cuda="12.1.1"}

[feature.cuda121.dependencies]
cuda = "12.1.1"

# ros2
[feature.ros2base]
channels = ["robostack-staging"]

[feature.ros2base.dependencies]
ros-humble-ros-base = "*"
colcon-common-extensions = "*"
ros-humble-rviz-visual-tools = "*"
ros-humble-foxglove-bridge = "*"

# TODO(ahl): this was just a test to see if we could install many
# prune these away to a true minimal set later
# [NOTE] on humble, we should expect python 3.10
# ros-humble-control-msgs = "*"
# ros-humble-xacro = "*"
# ros-humble-angles = "*"
# ros-humble-ros2-control = "*"
# ros-humble-realtime-tools = "*"
# ros-humble-control-toolbox = "*"
# ros-humble-moveit = "*"
# ros-humble-moveit-common = "*"
# ros-humble-moveit-ros-planning = "*"
# ros-humble-moveit-ros-planning-interface = "*"
# ros-humble-moveit-ros-visualization = "*"
# ros-humble-moveit-visual-tools = "*"
# ros-humble-ros2-controllers = "*"
# ros-humble-joint-state-publisher-gui = "*"
# ros-humble-diagnostic-updater = "*"
# ros-humble-geographic-msgs = "*"
# ros-humble-robot-localization = "*"
# ros-humble-rosidl-generator-cpp = "*"
# ros-humble-rosidl-default-generators = "*"
# ros-humble-image-transport = "*"
# ros-humble-ament-lint-auto = "*"
# ros-humble-ament-cmake-copyright = "*"
# ros-humble-ament-cmake-cppcheck = "*"
# ros-humble-ament-cmake-lint-cmake = "*"
# ros-humble-ament-cmake-pep257 = "*"
# ros-humble-ament-cmake-uncrustify = "*"
# ros-humble-ament-cmake-xmllint = "*"
# ros-humble-graph-msgs = "*"
# ros-humble-rqt = "*"
# ros-humble-test-msgs = "*"


# obelisk
[feature.obelisk.pypi-dependencies]
mujoco = ">=3.1.0"
"ruamel.yaml" = ">=0.18.0"
urdf_parser_py = ">=0.0.4"


# docs
[feature.docs.pypi-dependencies]
myst-parser = ">=3.0.1"
sphinx = ">=7.3.7"
sphinx-rtd-theme = ">=2.0.0"
sphinx-tabs = ">=3.0.0"


# test
# TODO(ahl): pytest bounded until issue resolved
# https://github.com/prefix-dev/pixi/issues/1529
[feature.test.dependencies]
pytest = "<=8.0.0"

[feature.test.pypi-dependencies]
pytest-xdist = ">=3.6.1"
typeguard = ">=4.3.0"


# leap hand
[feature.leap.dependencies]
ros-humble-dynamixel-sdk = ">=3.7"

[feature.leap.pypi-dependencies]
dynamixel-sdk = ">=3.7"


# zed cameras
[feature.zed.dependencies]
cython = "*"
opencv = "*"


# dev
[feature.dev.dependencies]
nano = "*"
vim = "*"

[feature.dev.pypi-dependencies]
pre-commit = ">=3.7.1"
ruff = ">=0.4.9"
pyright = "*"


# build
[feature.build.dependencies]
cmake = "3.16.*"
ninja = "1.12.1"
make = ">=4.3,<5"
glfw = "3.4"
mesalib = "*"

# ################ #
# ENVIRONMENT SETS #
# ################ #

[environments]
default = { solve-group="default" }

# obelisk
obelisk = { features=["obelisk"] }

# test
# TODO(ahl): see if we can use the original tests env with github CI, issue is cuda
test = { features=["cuda121", "obelisk", "ros2base", "test"], solve-group="dev" }

# ros2
ros2-install = { features=["ros2base"] }

# dev
dev-no-gpu = { features=["obelisk", "ros2base", "test", "dev", "build", "leap"] }
dev = { features=["cuda121", "obelisk", "ros2base", "test", "dev", "build", "leap", "zed"], solve-group="dev" }
docs = { features=["docs"] }

build = { features = ["cuda121", "build"] }

# ##### #
# TASKS #
# ##### #

[tasks]
# ros-related tasks
ros-clean = { cmd="rm -r build/ install/ log/", cwd="obelisk_ws" }

# run the core tests
cpp-test-node = { cmd = "obelisk/cpp/build/tests/NodeTest", depends-on = ["cpp-build"] }
cpp-test-node-debug = { cmd = "obelisk/cpp/build/tests/NodeTest", depends-on = ["cpp-build-debug"] }

# run the viz tests
cpp-test-viz = { cmd = "obelisk/cpp/build/tests/VizTest", depends-on = ["cpp-build"] }

# run the util tests
cpp-test-utils = { cmd = "obelisk/cpp/build/tests/UtilsTest", depends-on = ["cpp-build"] }

# run ctest
cpp-ctest = { cmd = "ctest", cwd = "obelisk/cpp/build/tests", depends-on = ["cpp-build"] }

# cmake
cmake = { cmd = [
    "cmake",
    "-GNinja",
    "-Sobelisk/cpp/",
    "-Bobelisk/cpp/build"
], inputs = ["obelisk/cpp/CMakeLists.txt", "tests/tests_cpp", "obelisk/cpp/"], outputs = ["obelisk/cpp/build/CMakeFiles/"] }

# build the cpp code
cpp-build = { cmd = ["cmake", "--build", "obelisk/cpp/build"], depends-on = ["cmake"], inputs = ["CMakeLists.txt", "obelisk/cpp/*"], outputs = ["obelisk/cpp/build/"] }
cpp-build-debug = { cmd = ["cmake", "--build", "obelisk/cpp/build", "-DCMAKE_BUILD_TYPE=Debug"], depends-on = ["cmake"], inputs = ["CMakeLists.txt", "obelisk/cpp/*"], outputs = ["obelisk/cpp/build/"] }

# run python and c++ tests
all-tests = { cmd = ["pytest"], depends-on = ["ros-build", "cpp-ctest"] }
